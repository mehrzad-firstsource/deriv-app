{"version":3,"sources":["webpack:///./App/Containers/SettingsModal/settings-language.jsx"],"names":["NonClickableLink","classNames","LanguageLink","lang","className","getAllowedLanguages","LanguageSettings","propTypes","children","PropTypes","isCurrentLanguage","key","getURL"],"mappings":"4GAAA,mG,cASA,OAAMA,SAAmB,EACrB,YACI,IAAE,aACF,EAAS,EAAEC,KACP,gCADsD,GAArC,mCAFzB,UADqB,wCAAzB,mDAWMC,IAGM,EAAK,SAAW,GADpB,aAEI,WAAW,uDACX,KAAMC,WAGNC,UAAWH,yEACP,6CADiB,0BADzB,UAKKI,IAAoB,mCAZZ,CAArB,mDAiBMC,cAAmB,MAkCzBN,YAAiBO,CACbC,SAAUC,QADe,EAA7B,WAKA,aAAeH,UAAf,6C,2BArCQ,WAAK,WAAU,qBAAf,UACI,qBACc,kBAAkB,OADhC,UAIJ,sCAAK,kBAAU,0CAAf,kBACiBD,sBAA8B,IACvCK,cAAiB,MAAjB,CACsB,UAAlB,yCAA6B,OAAKC,qCAAlC,OACI,EAAC,OAAD,iBAAcR,KAAMQ,EADxB,IAIA,GACI,IAAE,iBACF,KAAKA,KACD,IAAEC,cAHV,KAII,kBAAWX,OAAW,aAClB,MADsD,KAArC,eAJzB,UAQI,IAAC,mCAAD,CAAc,2CAAd,QAd+B,qBAR9B,OAAzB","file":"js/core.settings-language.e066d600b6cd29ecf442.js","sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getAllowedLanguages, getURL, currentLanguage } from 'Utils/Language';\n\nconst isCurrentLanguage = lang => lang === currentLanguage;\n\nconst NonClickableLink = ({ children, lang }) => (\n    <div\n        id={`dt_settings_${lang}_button`}\n        className={classNames('settings-language__language-link', {\n            'settings-language__language-link--active': isCurrentLanguage(lang),\n        })}\n    >\n        {children}\n    </div>\n);\n\nconst LanguageLink = ({ lang }) => (\n    <React.Fragment>\n        <Icon\n            icon='IcFlagUk' // TODO: enable other language\n            className={'settings-language__language-link-flag settings-language__language-flag'}\n            type={lang.replace(/(\\s|_)/, '-').toLowerCase()}\n        />\n        <span\n            className={classNames('settings-language__language-name', {\n                'settings-language__language-name--active': isCurrentLanguage(lang),\n            })}\n        >\n            {getAllowedLanguages()[lang]}\n        </span>\n    </React.Fragment>\n);\n\nconst LanguageSettings = () => (\n    <div className='settings-language'>\n        <div className='settings-language__language-header'>\n            <span>\n                <Localize i18n_default_text='Select language' />\n            </span>\n        </div>\n        <div className='settings-language__language-container'>\n            {Object.keys(getAllowedLanguages()).map(key =>\n                isCurrentLanguage(key) ? (\n                    <NonClickableLink lang={key} key={key}>\n                        <LanguageLink lang={key} />\n                    </NonClickableLink>\n                ) : (\n                    <a\n                        id={`dt_settings_${key}_button`}\n                        key={key}\n                        href={getURL(key)}\n                        className={classNames('settings-language__language-link', {\n                            'settings-language__language-link--active': isCurrentLanguage(key),\n                        })}\n                    >\n                        <LanguageLink lang={key} key={key} />\n                    </a>\n                )\n            )}\n        </div>\n    </div>\n);\n\nLanguageLink.propTypes = {\n    lang: PropTypes.string,\n};\n\nNonClickableLink.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n    lang: PropTypes.string,\n};\n\nexport default LanguageSettings;\n"],"sourceRoot":""}